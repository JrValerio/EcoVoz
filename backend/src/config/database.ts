import mongoose from 'mongoose';
import { config } from './config.js'; 

/**
 * Fun√ß√£o para conectar ao banco de dados MongoDB.
 * Gerencia eventos de conex√£o, reconex√£o e falha.
 */
const connectDB = async (): Promise<void> => {
  try {
    // Verifica se a URI do MongoDB est√° configurada
    const mongoUri =
      process.env.NODE_ENV === 'development'
        ? 'mongodb://localhost:27017/ecovoz' // Local
        : process.env.MONGO_URI || 'mongodb://mongo:27017/ecovoz'; // Docker ou produ√ß√£o

    // Configura as op√ß√µes de conex√£o
    const options: mongoose.ConnectOptions = {
      autoIndex: true, // Cria √≠ndices automaticamente
      connectTimeoutMS: 10000, // Tempo limite para conectar (10 segundos)
      serverSelectionTimeoutMS: 5000, // Tempo limite para encontrar servidores MongoDB
      socketTimeoutMS: 45000, // Tempo limite de inatividade de conex√µes
    };

    // Tenta conectar ao MongoDB
    await mongoose.connect(config.mongoUri, options);

    console.log(`[${new Date().toISOString()}] ‚úÖ MongoDB conectado com sucesso!`);
  } catch (error) {
    // Em caso de erro, exibe mensagens detalhadas e encerra a aplica√ß√£o
    console.error(`[${new Date().toISOString()}] ‚ùå Erro ao conectar ao MongoDB:`, error);
    console.error(`[${new Date().toISOString()}] üîç Verifique se a URI do MongoDB est√° correta: ${config.mongoUri}`);
    process.exit(1); // Encerra o processo
  }

  // Gerencia eventos de conex√£o para monitoramento cont√≠nuo
  mongoose.connection.on('connected', () => {
    console.log(`[${new Date().toISOString()}] ‚ÑπÔ∏è Conex√£o com o MongoDB estabelecida.`);
  });

  mongoose.connection.on('disconnected', () => {
    console.warn(`[${new Date().toISOString()}] ‚ö†Ô∏è Conex√£o com o MongoDB perdida. Tentando reconectar...`);
  });

  mongoose.connection.on('reconnected', () => {
    console.log(`[${new Date().toISOString()}] ‚úÖ Reconex√£o com o MongoDB bem-sucedida.`);
  });

  mongoose.connection.on('reconnectFailed', () => {
    console.error(`[${new Date().toISOString()}] ‚ùå Todas as tentativas de reconex√£o ao MongoDB falharam.`);
  });

  mongoose.connection.on('error', (err) => {
    console.error(`[${new Date().toISOString()}] ‚ùå Erro na conex√£o com o MongoDB:`, err);
  });
};

// Ativa logs detalhados no Mongoose durante o desenvolvimento
if (process.env.NODE_ENV === 'development') {
  mongoose.set('debug', true);
}

export default connectDB;
